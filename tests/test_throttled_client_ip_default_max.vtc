varnishtest "Test throttled client IP with default max"

server s1 {
  rxreq
  txresp -body "hello world"
} -start

varnish v1 -vcl {
  import std;
  include "${pwd}/vcl/varnish-apikey.vcl";

  backend default {
    .host = "${s1_addr}";
    .port = "${s1_port}";
  }

  sub recognize_apiname_apikey_token {
    # Identify api
    set req.http.apiname = "testthrottledbyipapidefault";
    # Save apikey
    set req.http.apikey = regsub(req.url, ".*[?;]apikey=([^;]*).*", "\1");
  }

  sub set_up {
    redis.send("FLUSHDB");
    redis.send("SET api:testthrottledbyipapidefault:throttled 1");
    redis.send("SET api:testthrottledbyipapidefault:counter:time 60");
    redis.send("SET api:testthrottledbyipapidefault:blocked:time 60");
    # Set the default_max for the api to 1, but don't set a specific max for
    # the user
    redis.send("SET api:testthrottledbyipapidefault:default_max 1");
  }

  sub vcl_init {
    call set_up;
  }

  sub vcl_recv {
    # Validate apikey using apikey library.
    call validate_api;
    set req.backend_hint = default;
  }
} -start

client c1 {
  # The first request should be accepted, and will set the counter for this
  # IP to 0, as well as mark the counter as needing to be reset in 60
  # seconds
  txreq
  rxresp

  expect resp.status == 200

  # The second request should also be accepted, as it will set the counter for
  # this IP to 1
  txreq
  rxresp

  expect resp.status == 200

  # The third request should fail, as it will set the counter for
  # this IP to 2, which is greater than the max we've set
  txreq
  rxresp

  expect resp.status == 401

} -run

varnish v1 -expect client_req == 3
