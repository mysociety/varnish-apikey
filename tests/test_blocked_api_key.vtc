varnishtest "Test blocked api key"

server s1 {
  rxreq
  txresp -body "hello world"
} -start

varnish v1 -vcl {
  import std;
  include "${pwd}/vcl/varnish-apikey.vcl";

  backend default {
    .host = "${s1_addr}";
    .port = "${s1_port}";
  }

  sub recognize_apiname_apikey_token {
    # Identify api
    set req.http.apiname = "testblockedapi";
    # Save apikey
    set req.http.apikey = regsub(req.url, ".*[?;]apikey=([^;]*).*", "\1");
  }

  sub set_up {
    redis.send("FLUSHDB");
    # We have to restrict this api too, so that the api key is used to
    # identify the user
    redis.send("SET api:testblockedapi:restricted 1");
    redis.send("SET api:testblockedapi:throttled 1");
    redis.send("SET api:testblockedapi:counter:time 60");
    redis.send("SET api:testblockedapi:blocked:time 60");
    redis.send("SET api:testblockedapi:default_max 60");
    redis.send("SET key:testapikeyblocked:api:testblockedapi 1");
    redis.send("SETEX key:testapikeyblocked:api:testblockedapi:blocked 60 1");
  }

  sub vcl_init {
    call set_up;
  }

  sub vcl_recv {
    # Validate apikey using apikey library.
    call validate_api;
    set req.backend_hint = default;
  }
} -start

client c1 {
  txreq -url "?apikey=testapikeyblocked"
  rxresp

  expect resp.status == 401
} -run

client c1 -run

varnish v1 -expect client_req == 1
